---
import { Image } from "astro:assets";

import { Icon } from "astro-icon/components";

interface Props {
  name: string;
  imageSrc: ImageMetadata;
  likes: string[];
  dislikes: string[];
  tropes: (string | { url: string; name: string })[];
  trivia: string;
}

const { name, likes, dislikes, tropes, trivia, imageSrc } = Astro.props;
---

<article id={name.toLowerCase()}>
  <h2>{name}</h2>
  <Image src={imageSrc} alt={`${name}'s profile picture'`} />
  <button class="more">Learn More</button>
  <div class="likes">
    <h3>Likes</h3>
    <ul>
      {
        likes.map((like) => (
          <li>
            <Icon name="fa6-solid:heart" class="icon" />
            {like}
          </li>
        ))
      }
    </ul>
  </div>
  <div class="dislikes">
    <h3>Dislikes</h3>
    <ul>
      {
        dislikes.map((dislike) => (
          <li>
            <Icon name="fa6-solid:heart-crack" class="icon" />
            {dislike}
          </li>
        ))
      }
    </ul>
  </div>
  <div class="about">
    <h3>About</h3>
    <slot />
  </div>
  <div class="tropes">
    <h3>Tropes</h3>
    <ul>
      {
        tropes.map((trope) => (
          <li>
            <Icon name="fa6-solid:splotch" class="icon" />
            {typeof trope === "object" ? (
              <a href={trope.url}>{trope.name}</a>
            ) : (
              trope
            )}
          </li>
        ))
      }
    </ul>
  </div>
  <div class="trivia">
    <h3>Trivia</h3>
    <Fragment set:html={trivia} />
  </div>
</article>

<script>
  const buttons = document.querySelectorAll("button.more");
  buttons.forEach((button) => {
    button.addEventListener("click", (e) => {
      const article = button.closest("article");
      article?.classList.add("show-all");
    });
  });
</script>

<style>
  button {
    width: 95%;
    border-radius: 15px;
    padding: 8px 5px;
    font-size: 1rem;
    background-color: white;
    border: 2px solid var(--fujo-red);
    font-family: "freude", sans-serif;
    color: var(--fujo-red);
  }
  button:hover {
    filter: drop-shadow(2px 2px var(--fujo-pink));
    transform: translate(-1px, -1px);
    cursor: pointer;
  }
  article {
    display: grid;
    grid-template-columns: 35% 1fr 1fr;
    grid-template-areas:
      "character name name"
      "character likes dislikes"
      "character about about"
      "character tropes tropes"
      "character trivia trivia";
    background-color: white;
    padding: 25px 30px;
    border-radius: 10px;
    row-gap: 10px;
    box-shadow: 2px 2px 0px 0px var(--text-color-disabled);
    margin: 0 auto;
    width: 100%;
  }

  h2 {
    grid-area: name;
    font-family: "freude", sans-serif;
    font-weight: 400;
    font-style: normal;
    color: var(--fujo-red);
    font-size: 2.7rem;
    text-shadow:
      -1px -1px 0 var(--terminal-dark),
      1px -1px 0 var(--terminal-dark),
      -1px 1px 0 var(--terminal-dark),
      1px 1px 0 var(--terminal-dark);
    filter: drop-shadow(1px 1px 0px var(--terminal-dark));
  }

  article :global(p) {
    margin: 0;
  }

  article :global(p + p) {
    margin-top: 10px;
  }

	li {
    position: relative;
    margin-bottom: 3px;
    list-style: none;
		display: flex;
		justify-content: flex-start;
		align-items: flex-start;
    gap: 5px;
  }

  .icon {
		display: inline;
		vertical-align: text-bottom;
    color: var(--fujo-pink);
		margin-bottom: 0px;
		font-size: 1rem;
		line-height: 1rem;
		flex-shrink: 0;
		flex-grow: 0;
  }

  a {
    color: var(--fujo-red);
  }

  a:hover {
    color: var(--fujo-pink);
  }

  h3 {
    font-family: "freude", sans-serif;
    font-weight: 400;
    font-style: normal;
    color: var(--fujo-light-blue);
    font-size: 1.7rem;
    text-shadow:
      -1px -1px 0 var(--terminal-dark),
      1px -1px 0 var(--terminal-dark),
      -1px 1px 0 var(--terminal-dark),
      1px 1px 0 var(--terminal-dark);
    margin-bottom: 8px;
    filter: drop-shadow(1px 1px 0px var(--terminal-dark));
  }

  img {
    max-height: 475px;
    align-self: center;
    grid-area: character;
    width: auto;
  }

  .likes {
    grid-area: likes;
  }

  .dislikes {
    grid-area: dislikes;
  }

  .about {
    grid-area: about;
  }

  .tropes {
    grid-area: tropes;
  }

  .tropes ul {
    column-count: 2;
    column-gap: 0px;
  }

  .trivia {
    grid-area: trivia;
  }
  button {
    display: none;
  }

  @media (max-width: 749px) {
    article {
      display: flex;
      flex-direction: column;
      align-content: center;
      align-items: center;
      max-width: 90vw;
			padding: 18px 20px;
    }

    ul {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .trivia,
    .about {
      display: flex;
      flex-direction: column;
      max-width: 95%;
    }

    .tropes ul {
      column-count: 1;
    }
    article:not(.show-all) div {
      display: none;
    }
    article:not(.show-all)button {
      display: block;
    }

		h3 {
			text-align: center;
		}
  }
</style>
